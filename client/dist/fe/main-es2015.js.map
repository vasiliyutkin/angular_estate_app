{"version":3,"sources":["./src/app/component_library/spinner/spinner.component.ts","./src/app/component_library/spinner/spinner.component.html","./src/app/component_library/spinner/index.ts","./src/app/helpers/index.ts","./src/environments/environment.ts","./src/app/helpers/auth.guard.ts","./src/app/auth/auth.component.ts","./src/app/auth/auth.component.html","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/helpers/jwt.interceptor.ts","./src/app/services/authentication.service.ts","./src/app/helpers/error.interceptor.ts","./src/app/auth/index.ts","./src/app/services/index.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-spinner',\n  templateUrl: 'spinner.component.html',\n  styleUrls: ['spinner.component.scss'],\n})\nexport class SpinnerComponent {}\n","<div class=\"overlay\">\n    <div class=\"loader\">\n        <div class=\"inner one\"></div>\n        <div class=\"inner two\"></div>\n        <div class=\"inner three\"></div>\n    </div>\n</div>","export * from './spinner.component';\n","export * from './auth.guard';\nexport * from './error.interceptor';\nexport * from './jwt.interceptor';\n","export const environment = {\n  production: false,\n  apiUrl: 'http://localhost:3000'\n};\n","import { Injectable } from '@angular/core';\nimport {\n  Router,\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n} from '@angular/router';\n\nimport { AuthenticationService } from '../services';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const currentUser = this.authenticationService.currentUserValue;\n    if (currentUser) {\n      const currentData = this.authenticationService.currentUserInfo;\n      if (currentData) {\n        sessionStorage.setItem('user', JSON.stringify(currentData));\n        return true;\n      }\n      return true;\n    }\n    // not logged in so redirect to login page with the return url\n    this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n    return false;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AuthenticationService } from '../services';\n\n@Component({\n  templateUrl: 'auth.component.html',\n  styleUrls: ['./auth.component.scss'],\n})\nexport class AuthComponent implements OnInit {\n  loginForm: FormGroup;\n  registrationForm: FormGroup;\n  forgotForm: FormGroup;\n  loading = false;\n  registrationFormSubmitted = false;\n  forgotFormSubmited = false;\n  forgotPassword = false;\n  loginFormSubmitted = false;\n  registrationMode = true;\n  returnUrl: string;\n  loginError = '';\n  scheduleError = '';\n  passwordNotification = '';\n  meetingInfo = '';\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {}\n\n  ngOnInit() {\n    this.registrationForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      email: ['', Validators.compose([Validators.required, Validators.email])],\n    });\n\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n\n    this.forgotForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      newPassword: ['', Validators.required],\n      confirmPassword: ['', Validators.required],\n    });\n\n    this.returnUrl =\n      this.route.snapshot.queryParams.returnUrl !== '/'\n        ? this.route.snapshot.queryParams.returnUrl\n        : '/dashboard';\n  }\n\n  get sf() {\n    return this.registrationForm.controls;\n  }\n\n  get lf() {\n    return this.loginForm.controls;\n  }\n\n  get ff() {\n    return this.forgotForm.controls;\n  }\n\n  get passwordsMatch(): boolean {\n    return this.ff.newPassword.value === this.ff.confirmPassword.value;\n  }\n\n  resetPassword() {\n    this.forgotFormSubmited = true;\n\n    if (this.forgotForm.invalid || !this.passwordsMatch) {\n      return;\n    }\n\n    this.authenticationService\n      .resetPassword(this.ff.username.value, this.ff.newPassword.value)\n      .pipe(first())\n      .subscribe(\n        (_) => {\n          this.loginError = null;\n          this.passwordNotification = 'Password successfully reset';\n          this.forgotForm.reset();\n          this.forgotPassword = false;\n          setTimeout(() => {\n            this.passwordNotification = null;\n          }, 3000);\n        },\n        (err) => {\n          this.loginError = err;\n        }\n      );\n  }\n\n  scheduleDemo() {\n    this.registrationFormSubmitted = true;\n\n    if (this.registrationForm.invalid) {\n      return;\n    }\n    this.authenticationService\n      .sendEmail(this.sf.email.value, this.sf.name.value, '', 'Meeting')\n      .pipe(first())\n      .subscribe((sent: boolean) => {\n        if (sent) {\n          this.scheduleError = null;\n          this.meetingInfo = `Meeting for ${this.sf.name.value}: ${this.sf.email.value} was successfully scheduled!`;\n          this.registrationFormSubmitted = false;\n          this.registrationForm.reset();\n          setTimeout(() => {\n            this.meetingInfo = null;\n            this.registrationFormSubmitted = false;\n          }, 3000);\n        } else {\n          this.meetingInfo = null;\n          this.scheduleError = 'Meeting was not sceduled';\n          setTimeout(() => {\n            this.registrationFormSubmitted = null;\n          }, 3000);\n        }\n      });\n  }\n\n  login() {\n    this.loginFormSubmitted = true;\n\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    this.loading = true;\n    this.authenticationService\n      .login(this.lf.username.value, this.lf.password.value)\n      .pipe(first())\n      .subscribe(\n        (_) => {\n          this.router.navigate(['/dashboard']);\n        },\n        (error) => {\n          this.loginError = error;\n          setTimeout(() => {\n            this.loginError = null;\n          }, 10000);\n          this.loading = false;\n        }\n      );\n  }\n}\n","<div class=\"container mx-auto mt-5\">\n    <div class=\"d-flex flex-column\">\n        <h1 class=\"mx-auto mt-4\">Estate Management Made Simple</h1>\n        <p class=\"mx-auto mt-n3 pt-4\">Introducing a groundbreaking apartment management tool.</p>\n    </div>\n\n    <div class=\"d-flex justify-content-center mt-4\">\n        <span [ngClass]=\"{'btn-light-blue': registrationMode }\" class=\"btn btn-sm btn-outline-dark border-1 mr-5\"\n            (click)=\"registrationMode = true; forgotPassword = false\">\n            Register\n        </span>\n        <span [ngClass]=\"{'btn-light-blue': !registrationMode }\" class=\"btn btn-sm btn-outline-dark border-1\"\n            (click)=\"registrationMode = false; forgotPassword = false\">\n            Login to Account\n        </span>\n    </div>\n\n    <div class=\"col-md-6 offset-md-3 mt-4\" *ngIf=\"registrationMode && !forgotPassword\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <div *ngIf=\"meetingInfo\" class=\"info alert alert-info mx-auto mb-3\">\n                    {{meetingInfo}}\n                </div>\n\n                <div *ngIf=\"scheduleError\" class=\"error alert alert-danger mx-auto mb-3\">\n                    {{scheduleError}}\n                </div>\n\n                <h1 class=\"text-center mb-5\">User Registration</h1>\n\n                <p>Enter your name email.</p>\n\n                <form [formGroup]=\"registrationForm\" class=\"mx-auto\" (ngSubmit)=\"scheduleDemo()\">\n                    <div class=\"form-group mt-5 mb-5\">\n                        <input type=\"text\" formControlName=\"name\" class=\"form-control\" placeholder=\"Name\"\n                            [ngClass]=\"{ 'is-invalid': registrationFormSubmitted && sf.name.errors }\" />\n                        <div *ngIf=\"registrationFormSubmitted && sf.name.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"sf.name.errors.required\">\n                                Name is required\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group mt-5 mb-5\">\n                        <input type=\"text\" formControlName=\"email\" class=\"form-control\" placeholder=\"Email\"\n                            [ngClass]=\"{ 'is-invalid': registrationFormSubmitted && sf.email.errors }\" />\n                        <div *ngIf=\"registrationFormSubmitted && sf.email.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"sf.email.errors.required\">\n                                Email is required\n                            </div>\n                            <div *ngIf=\"sf.email.errors.email\">\n                                Invalid Email format\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"row justify-content-center align-self-center\">\n                        <button [disabled]=\"loading\" class=\"btn btn-lg btn-outline-success\" type=\"submit\">\n                            Register\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n\n\n    <div class=\"col-md-6 offset-md-3 mt-4\" *ngIf=\"!registrationMode && !forgotPassword\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <div *ngIf=\"loginError\" class=\"error alert alert-danger mx-auto mb-3\">\n                    {{loginError}}\n                </div>\n                <div *ngIf=\"passwordNotification\" class=\"info alert alert-info mx-auto mb-3\">\n                    {{passwordNotification}}\n                </div>\n\n                <h1 class=\"text-center mb-5\">Log In</h1>\n\n                <p>Enter your username/email and password.</p>\n\n                <form [formGroup]=\"loginForm\" class=\"mx-auto\" (ngSubmit)=\"login()\">\n                    <div class=\"form-group mt-5 mb-5\">\n                        <input type=\"text\" formControlName=\"username\" class=\"form-control\" placeholder=\"Email Address\"\n                            [ngClass]=\"{ 'is-invalid': loginFormSubmitted && lf.username.errors }\" />\n                        <div *ngIf=\"loginFormSubmitted && lf.username.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"lf.username.errors.required\">\n                                Email Address is required\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group mt-5 mb-3\">\n                        <input type=\"password\" formControlName=\"password\" class=\"form-control\" placeholder=\"Password\"\n                            [ngClass]=\"{ 'is-invalid': loginFormSubmitted && lf.password.errors }\" />\n                        <div *ngIf=\"loginFormSubmitted && lf.password.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"lf.password.errors.required\">\n                                Password is required\n                            </div>\n                        </div>\n                        <div class=\"text-right mt-3\" (click)='forgotPassword = true'>\n                            <span class=\"btn btn-sm btn-light pr-0\">Forgot Password?</span>\n                        </div>\n                    </div>\n\n                    <div class=\"row justify-content-center align-self-center\">\n                        <button [disabled]=\"loading\" class=\"btn btn-lg btn-outline-success\" type=\"submit\">\n                            Log In\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"col-md-6 offset-md-3 mt-4 mb-2\" *ngIf=\"forgotPassword\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <div *ngIf=\"loginError\" class=\"error alert alert-danger mx-auto mb-3\">\n                    {{loginError}}\n                </div>\n                <div *ngIf=\"passwordNotification\" class=\"info alert alert-info mx-auto mb-3\">\n                    {{passwordNotification}}\n                </div>\n\n                <h1 class=\"text-center mb-5\">Forgot Password</h1>\n\n                <p>Enter your username/email and new password.</p>\n\n                <form [formGroup]=\"forgotForm\" class=\"mx-auto\" (ngSubmit)=\"resetPassword()\">\n                    <div class=\"form-group mt-5 mb-3\">\n                        <input type=\"text\" formControlName=\"username\" class=\"form-control\" placeholder=\"Email Address\"\n                            [ngClass]=\"{ 'is-invalid': forgotFormSubmited && ff.username.errors }\" />\n                        <div *ngIf=\"forgotFormSubmited && lf.username.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"ff.username.errors.required\">\n                                Email Address is required\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group mt-4 mb-3\">\n                        <input type=\"password\" formControlName=\"newPassword\" class=\"form-control\"\n                            placeholder=\"New Password\"\n                            [ngClass]=\"{ 'is-invalid': forgotFormSubmited && ff.newPassword.errors }\" />\n                        <div *ngIf=\"forgotFormSubmited && ff.newPassword.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"ff.newPassword.errors.required\">\n                                New Password is required\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group mt-4 mb-3\">\n                        <input type=\"password\" formControlName=\"confirmPassword\" class=\"form-control\"\n                            placeholder=\"Confirm Password\"\n                            [ngClass]=\"{ 'is-invalid': forgotFormSubmited && ff.confirmPassword.errors }\" />\n                        <div *ngIf=\"forgotFormSubmited && ff.confirmPassword.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"ff.confirmPassword.errors.required\">\n                                Password Confirmation is required\n                            </div>\n                        </div>\n                        <div *ngIf=\"!passwordsMatch\" class=\"confirmation-failed\">\n                            Passwords doesn't match\n                        </div>\n                    </div>\n\n                    <div class=\"row justify-content-center align-self-center\">\n                        <button [disabled]=\"loading\" class=\"btn btn-lg btn-outline-success mt-4\" type=\"submit\">\n                            Reset Password\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>","<app-spinner *ngIf=\"loading\"></app-spinner>\n\n<div class=\"container\">\n    <router-outlet></router-outlet>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-estate',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  loading = true;\n\n  constructor() {\n    setTimeout(() => {\n      this.loading = false;\n    }, 3000);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { AuthComponent } from './auth';\nimport { SpinnerComponent } from './component_library/spinner';\n\nimport { JwtInterceptor, ErrorInterceptor } from './helpers';\n\n@NgModule({\n  declarations: [AppComponent, AuthComponent, SpinnerComponent],\n  imports: [\n    BrowserModule,\n    NgbModule,\n    CommonModule,\n    FormsModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatIconModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment } from '../../environments/environment';\nimport { AuthenticationService } from '../services';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n  constructor(private authenticationService: AuthenticationService) {}\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    const currentUser: { accessToken: string } = this.authenticationService\n      .currentUserValue;\n    const isLoggedIn = currentUser && currentUser.accessToken;\n    const isApiUrl = request.url.startsWith(environment.apiUrl);\n    if (isLoggedIn && isApiUrl) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${currentUser.accessToken}`,\n        },\n      });\n    }\n\n    return next.handle(request);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { environment } from '../../environments/environment';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthenticationService {\n  private currentUserSubject: BehaviorSubject<{ accessToken: string }>;\n  public currentUser: any;\n\n  constructor(private http: HttpClient) {\n    this.currentUserSubject = new BehaviorSubject<{ accessToken: string }>(\n      JSON.parse(localStorage.getItem('currentUser'))\n    );\n    this.currentUser = JSON.parse(localStorage.getItem('user'));\n  }\n\n  public get currentUserValue(): { accessToken: string } {\n    return this.currentUserSubject.value;\n  }\n  public get currentUserInfo() {\n    return this.currentUser;\n  }\n\n  public get headers() {\n    const updateHeaders = new HttpHeaders({\n      Authorization: `Bearer ${this.currentUserValue}`,\n      'Content-Type': 'application/json',\n    });\n    return updateHeaders;\n  }\n\n  getUsers() {\n    return this.http\n      .get<any>(`${environment.apiUrl}/auth`, { headers: this.headers })\n      .pipe(\n        map((user) => {\n          return user;\n        })\n      );\n  }\n\n  getUserById(userId: string) {\n    return this.http\n      .get<any>(`${environment.apiUrl}/auth/user/${userId}`, {\n        headers: this.headers,\n      })\n      .pipe(\n        map((user) => {\n          return user;\n        })\n      );\n  }\n\n  deactivateUserById(userId: string, status: boolean) {\n    return this.http\n      .post<any>(`${environment.apiUrl}/auth/deactivate`, { userId, status })\n      .pipe(\n        map((user) => {\n          return user;\n        })\n      );\n  }\n\n  deleteUserById(userId: string) {\n    return this.http\n      .delete<any>(`${environment.apiUrl}/auth/delete/${userId}`, {\n        headers: this.headers,\n      })\n      .pipe(\n        map((user) => {\n          return user;\n        })\n      );\n  }\n\n  signUpUser(userData: any) {\n    return this.http.post<any>(`${environment.apiUrl}/auth/signUp`, {\n      userData,\n    });\n  }\n\n  login(username: string, password: string) {\n    return this.http\n      .post<any>(`${environment.apiUrl}/auth/signin`, {\n        username,\n        password,\n      })\n      .pipe(\n        map((data) => {\n          const { accessToken, userData } = data;\n          localStorage.setItem('currentUser', JSON.stringify(accessToken));\n          localStorage.setItem('user', JSON.stringify(userData));\n          sessionStorage.setItem('user', JSON.stringify(userData));\n          this.currentUserSubject.next(data);\n          return data;\n        })\n      );\n  }\n\n  resetPassword(username: string, newPassword: string) {\n    return this.http\n      .post<any>(`${environment.apiUrl}/auth/resetPassword`, {\n        username,\n        newPassword,\n      })\n      .pipe(\n        map((data) => {\n          return data;\n        })\n      );\n  }\n\n  logout() {\n    localStorage.removeItem('currentUser');\n    localStorage.removeItem('user');\n    sessionStorage.removeItem('user');\n    this.currentUserSubject.next(null);\n  }\n\n  passwordChange(oldPassword: string, newPassword: string, user: any) {\n    return this.http.post<any>(`${environment.apiUrl}/auth/password-change`, {\n      oldPassword,\n      newPassword,\n      user,\n    });\n  }\n\n  sendEmail(\n    email: string,\n    name?: string,\n    message?: string,\n    location?: string\n  ): Observable<boolean> {\n    return this.http\n      .post<any>(`${environment.apiUrl}/auth/sendEmail`, {\n        name,\n        email,\n        message,\n        location,\n      })\n      .pipe(map((res) => res.ok));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { AuthenticationService } from '../services';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(private authenticationService: AuthenticationService) {}\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(\n      catchError((err) => {\n        if (err.status === 401) {\n          this.authenticationService.logout();\n          location.reload();\n        }\n\n        const error = err.error.message || err.statusText;\n        return throwError(error);\n      })\n    );\n  }\n}\n","export * from './auth.component';\n","export * from './authentication.service';\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthComponent } from './auth';\nimport { AuthGuard } from './helpers';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthComponent,\n  },\n  {\n    path: 'auth',\n    component: AuthComponent,\n  },\n  { path: '**', redirectTo: '' },\n\n  /* {\n    path: '',\n    component: LoginComponent,\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: 'admin',\n        component: LoginComponent,\n        canActivate: [AuthGuard],\n      },\n      {\n        path: 'main',\n        component: LoginComponent,\n        canActivate: [AuthGuard],\n      },\n      {\n        path: 'subscriptions',\n        component: LoginComponent,\n        canActivate: [AuthGuard],\n      },\n      {\n        path: 'account',\n        component: LoginComponent,\n        canActivate: [AuthGuard],\n      },\n    ],\n  },\n  { path: 'login', component: LoginComponent },\n  , */\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: false })],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .then((ref) => {\n    if (window['ngRef']) {\n      window['ngRef'].destroy();\n    }\n    window['ngRef'] = ref;\n  })\n  .catch((err) => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}