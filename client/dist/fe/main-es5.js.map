{"version":3,"sources":["webpack:///src/app/component_library/spinner/spinner.component.ts","webpack:///src/app/component_library/spinner/spinner.component.html","webpack:///src/app/signin/signin.component.ts","webpack:///src/app/signin/signin.component.html","webpack:///src/app/about/about.component.ts","webpack:///src/app/about/about.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/helpers/auth.guard.ts","webpack:///src/app/component_library/navigation/navigation.component.ts","webpack:///src/app/component_library/navigation/navigation.component.html","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/forgot/forgot.component.ts","webpack:///src/app/forgot/forgot.component.html","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/helpers/jwt.interceptor.ts","webpack:///src/app/services/authentication.service.ts","webpack:///src/app/helpers/error.interceptor.ts","webpack:///src/app/signup/signup.component.ts","webpack:///src/app/signup/signup.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/main/main.component.ts","webpack:///src/app/main/main.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["SpinnerComponent","SigninComponent","formBuilder","router","authenticationService","loginFormSubmitted","loginError","loginForm","group","username","required","password","controls","invalid","login","lf","value","pipe","subscribe","_","navigate","error","setTimeout","AboutComponent","environment","production","apiUrl","AuthGuard","route","state","currentUser","currentUserValue","currentData","currentUserInfo","sessionStorage","setItem","JSON","stringify","NavigationComponent","DashboardComponent","ForgotComponent","forgotFormSubmited","passwordNotification","forgotForm","newPassword","confirmPassword","ff","passwordsMatch","resetPassword","reset","err","console","log","AppComponent","loading","AppModule","provide","useClass","multi","JwtInterceptor","request","next","isLoggedIn","accessToken","isApiUrl","url","startsWith","clone","setHeaders","Authorization","handle","AuthenticationService","http","currentUserSubject","parse","localStorage","getItem","updateHeaders","get","headers","user","userId","status","post","userData","data","removeItem","oldPassword","email","name","message","location","res","ok","ErrorInterceptor","logout","reload","statusText","SignupComponent","signupError","registrationFormSubmitted","registrationForm","compose","sendEmail","sf","sent","signUp","routes","path","canActivate","component","children","redirectTo","AppRoutingModule","forRoot","useHash","MainComponent","bootstrapModule","then","ref","window","destroy","webpackEmptyAsyncContext","req","Promise","resolve","e","Error","code","keys","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-spinner',\n  templateUrl: 'spinner.component.html',\n  styleUrls: ['spinner.component.scss'],\n})\nexport class SpinnerComponent {}\n","<div class=\"overlay\">\n    <div class=\"loader\">\n        <div class=\"inner one\"></div>\n        <div class=\"inner two\"></div>\n        <div class=\"inner three\"></div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AuthenticationService } from '../services/authentication.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.scss'],\n})\nexport class SigninComponent implements OnInit {\n  loginForm: FormGroup;\n  loginFormSubmitted = false;\n  loginError = '';\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {}\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n  }\n\n  get lf() {\n    return this.loginForm.controls;\n  }\n  login() {\n    this.loginFormSubmitted = true;\n\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    this.authenticationService\n      .login(this.lf.username.value, this.lf.password.value)\n      .pipe(first())\n      .subscribe(\n        (_) => {\n          this.router.navigate(['/']);\n        },\n        (error) => {\n          this.loginError = error;\n          setTimeout(() => {\n            this.loginError = null;\n          }, 5000);\n        }\n      );\n  }\n}\n","<div class=\"container mx-auto\">\n    <div class=\"col-md-6 offset-md-3 mt-4\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <div *ngIf=\"loginError\" class=\"error alert alert-danger mx-auto mb-3\">\n                    {{loginError}}\n                </div>\n\n                <h1 class=\"text-center mb-5\">Sign In</h1>\n\n                <p>Enter your username/email and password.</p>\n\n                <form [formGroup]=\"loginForm\" class=\"mx-auto\" (ngSubmit)=\"login()\">\n                    <div class=\"form-group mt-5 mb-5\">\n                        <input type=\"text\" formControlName=\"username\" class=\"form-control\" placeholder=\"Email Address\"\n                            [ngClass]=\"{ 'is-invalid': loginFormSubmitted && lf.username.errors }\" />\n                        <div *ngIf=\"loginFormSubmitted && lf.username.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"lf.username.errors.required\">\n                                Email Address is required\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group mt-5 mb-3\">\n                        <input type=\"password\" formControlName=\"password\" class=\"form-control\" placeholder=\"Password\"\n                            [ngClass]=\"{ 'is-invalid': loginFormSubmitted && lf.password.errors }\" />\n                        <div *ngIf=\"loginFormSubmitted && lf.password.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"lf.password.errors.required\">\n                                Password is required\n                            </div>\n                        </div>\n                        <div class=\"text-right mt-3\">\n                            <a routerLink=\"/forgot\" class=\"btn btn-sm btn-light\">Forgot Password?</a>\n                        </div>\n                    </div>\n\n                    <div class=\"row justify-content-center align-self-center\">\n                        <button class=\"btn btn-outline-dark\" type=\"submit\">\n                            Log In\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-6\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Impedit sequi natus dignissimos quas\n        dolorem ipsam ea. Voluptatibus voluptatum numquam nemo nulla odit reiciendis cum sit cupiditate laboriosam ab\n        totam consectetur, ut perspiciatis sapiente quo maiores dolore molestiae quis non dicta unde harum ipsam rerum\n        saepe. Hic harum mollitia at ratione quae labore voluptates, nam rem perferendis cum placeat, aliquid aliquam\n        voluptatum magnam autem sed molestias accusamus nihil id iste consequuntur eaque repellendus repudiandae! Velit\n        tenetur soluta nemo est ut officia asperiores provident optio, illo pariatur vero maiores assumenda culpa animi.\n        Consectetur voluptates eum inventore quis fuga qui nemo ut asperiores, aspernatur omnis vitae quo impedit,\n        praesentium quibusdam. Quisquam velit temporibus beatae odit corrupti inventore deserunt illum? Eaque\n        perspiciatis nesciunt doloremque quam nobis dolores! Voluptate tenetur cupiditate animi eligendi praesentium\n        reprehenderit asperiores, maiores aliquam ut, vero ullam aut sit quam suscipit ducimus cumque dolor impedit,\n        iusto in illo adipisci iure accusantium. Commodi veritatis illo praesentium doloremque nulla laboriosam magni\n        dolores, tempore minus blanditiis nisi, nobis sit! Cupiditate, perferendis sequi in placeat est beatae modi.\n        Maxime in tempora saepe! Nostrum, sequi. Est, sequi asperiores consectetur, quisquam debitis explicabo vitae\n        animi, laudantium deserunt vel quas nulla. Debitis dicta, consectetur sequi sed totam placeat commodi,\n        praesentium rerum voluptatibus, voluptatum fugit eos alias pariatur iste! Odio tempora quos excepturi\n        accusantium aspernatur. Voluptate officia, incidunt officiis suscipit nesciunt odit labore cum architecto esse\n        modi eligendi eius! Tenetur eum enim adipisci maiores quo saepe possimus perspiciatis debitis pariatur incidunt\n        corrupti, tempora facere, eos neque fugiat, numquam ducimus nesciunt nihil culpa in illo aliquam ipsam earum?\n        Corporis eius dolorem molestias quia perferendis fugit cumque veniam in perspiciatis quos enim quibusdam illum\n        repudiandae nihil quasi repellendus vel, fugiat sint? Quaerat hic voluptatum ducimus nulla amet laboriosam\n        illum, ullam quia rem molestiae alias dignissimos sit culpa iure odit. Voluptatem quasi alias porro voluptate,\n        blanditiis voluptatibus ad! Enim perspiciatis, velit tempora obcaecati fuga quae ipsam dignissimos neque magnam,\n        libero aspernatur sequi impedit architecto atque. Dolores et odio soluta vero voluptates, totam laborum porro\n        accusamus blanditiis nisi rerum in libero a, delectus vitae architecto quisquam molestias, quibusdam\n        voluptatibus incidunt quas mollitia eum magni. Sint itaque commodi dolor possimus quae nam odit? Quasi quae\n        placeat, quibusdam quam dolor explicabo reprehenderit facere natus tenetur expedita culpa. Earum, illo amet\n        error quos eum, distinctio nisi ad veritatis quibusdam repellendus vel. Porro commodi autem nulla natus\n        accusantium voluptates iste illum laboriosam corrupti, omnis provident suscipit eius similique quae placeat\n        ullam amet nisi! Non vel incidunt exercitationem autem nulla, aliquid laboriosam fugit impedit molestias\n        nostrum, ducimus cum aliquam. Dolores quisquam accusamus vitae similique nesciunt nihil facere quibusdam. Quis\n        modi delectus esse amet eos laborum accusamus neque cupiditate? Natus sit, dolores, sed rerum mollitia obcaecati\n        perferendis non adipisci tempora incidunt aspernatur illo aliquid vel, repudiandae molestias. Minus, animi\n        perferendis incidunt consequuntur qui officia aut necessitatibus quibusdam recusandae excepturi ullam similique\n        numquam corrupti iure optio iste tempore exercitationem atque debitis possimus. Rem sint incidunt fuga dolores,\n        eligendi error commodi officiis perferendis ullam, alias minus aliquam voluptatibus ad deserunt tempora.</div>\n    <div class=\"col-md-6\">Lorem ipsum dolor sit amet consectetur adipisicing elit. Deleniti consectetur atque quidem\n        modi aperiam minus iure et necessitatibus. Praesentium, dignissimos nemo ratione eos quam voluptate illum nihil\n        sequi adipisci laudantium impedit voluptas beatae maxime exercitationem ipsum ex consequatur quae suscipit\n        commodi laborum a quaerat perspiciatis. Provident harum eaque incidunt blanditiis temporibus soluta ex sapiente\n        earum officiis, deserunt amet nisi debitis eveniet laboriosam animi dignissimos perspiciatis maiores maxime\n        aliquam. Recusandae ratione neque nam cum maxime veritatis consectetur blanditiis minima vero iure porro ut\n        officiis cupiditate quod velit ipsa, officia quae fugiat facere dolores animi et. Tempore, consequatur. Deserunt\n        consequuntur molestias quas. Soluta tempore magni pariatur, quos alias nesciunt facere. Distinctio porro nam non\n        adipisci eos cupiditate rem exercitationem voluptas, vel aliquid quia? Amet officia tempora, ad quo ducimus\n        nostrum aut numquam saepe blanditiis cum laudantium dolores atque optio exercitationem esse asperiores nisi,\n        culpa voluptatibus libero facere. Repellat, totam suscipit. Suscipit, fugit perferendis! Dolore natus quisquam\n        eveniet sint beatae doloribus expedita odio dicta ex explicabo, accusantium sed impedit nemo quod, nisi incidunt\n        quo unde illo. Dolore provident impedit error! Repellat qui ducimus nisi debitis laudantium sunt sint unde\n        voluptatem. At reprehenderit officiis esse iure facere id odio. Labore, hic, sunt laboriosam pariatur nesciunt\n        dolores molestiae aliquid ipsum dolorum asperiores quas nobis vero? Autem, et doloremque. Corrupti omnis\n        quisquam ea molestiae aut repellat culpa saepe accusantium ducimus doloribus repellendus distinctio sed\n        voluptatibus cumque beatae deleniti praesentium fuga eaque earum optio, quaerat error nemo. Ipsam voluptas\n        numquam suscipit saepe debitis dignissimos earum, voluptatibus quasi, necessitatibus ut tempora in molestias\n        voluptate odio consequuntur dolorem quo perspiciatis rem enim dolore dolor tempore? Dolorem beatae quos\n        praesentium maiores. Impedit explicabo exercitationem odio, optio quasi modi suscipit. Omnis qui aliquam\n        corrupti tempore reiciendis fugiat sint illo veritatis odit laudantium vero, laboriosam deserunt placeat\n        blanditiis incidunt possimus delectus praesentium, non, commodi tempora ea neque ratione minus? Cum aut maiores\n        in odit, necessitatibus neque placeat repudiandae exercitationem commodi sed sit veritatis ad. Saepe, delectus\n        numquam, voluptatibus modi eum et impedit velit dolor expedita iusto ex, facere quisquam fugit praesentium\n        aliquid animi est sunt mollitia molestias esse provident. Temporibus id expedita, assumenda obcaecati est ut\n        doloremque, voluptatum quibusdam itaque illo qui earum repellat labore quod consequatur pariatur, amet odit\n        recusandae! Nostrum recusandae itaque ut qui ratione voluptate, dicta tenetur dolor illo perferendis repellendus\n        ipsa? Labore nesciunt, ullam quos, repudiandae quibusdam iure maxime consectetur dolor et numquam recusandae\n        odio facere blanditiis ipsa? Porro alias voluptate, dolor optio autem perferendis consequatur, minima doloribus\n        totam fugiat voluptates officia consectetur laudantium, recusandae quis. Sed enim odio cum fugit quaerat sunt\n        iusto aspernatur! Culpa laborum a ut. Similique veniam iusto amet eveniet inventore, iure quam consequatur porro\n        architecto dolorum, laboriosam ducimus at minus, aliquam autem? Laborum ad voluptates labore ipsum fugiat quidem\n        illum, adipisci est doloribus suscipit consequuntur vero, sed distinctio optio provident placeat velit sequi.\n        Architecto illo nam, porro aspernatur ipsam, id error ea dolore consequatur blanditiis nulla obcaecati autem\n        amet impedit aperiam ipsum eaque magnam quis minus consectetur a eius animi. Tempora, alias dolor.</div>\n</div>","export const environment = {\n  production: false,\n  apiUrl: 'http://localhost:3000/api'\n};\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n} from '@angular/router';\n\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n  constructor(private authenticationService: AuthenticationService) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const currentUser = this.authenticationService.currentUserValue;\n    if (currentUser) {\n      const currentData = this.authenticationService.currentUserInfo;\n      if (currentData) {\n        sessionStorage.setItem('user', JSON.stringify(currentData));\n        return false;\n      }\n      return false;\n    }\n\n    return true;\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss'],\n})\nexport class NavigationComponent {}\n","<header class=\"header\">\n    <a routerLink=\"/\" class=\"logo\">\n        <img src=\"../../assets/images/logo.svg\" alt=\"app_logo\">\n    </a>\n\n    <input class=\"menu-btn\" type=\"checkbox\" id=\"menu-btn\" />\n\n    <label class=\"menu-icon\" for=\"menu-btn\"><span class=\"navicon\"></span></label>\n\n    <ul class=\"menu\">\n        <li>\n            <a class=\"nav-link\" routerLink=\"/\" routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact: true}\">\n                Dashboard\n            </a>\n        </li>\n\n        <li>\n            <a class=\"nav-link\" routerLink=\"/about\" routerLinkActive=\"active-link\"\n                [routerLinkActiveOptions]=\"{exact: true}\">\n                About\n            </a>\n        </li>\n\n        <li>\n            <a class=\"nav-link\" routerLink=\"/signin\" routerLinkActive=\"active-link\"\n                [routerLinkActiveOptions]=\"{exact: true}\">\n                Sign In\n            </a>\n        </li>\n\n        <li>\n            <a class=\"nav-link\" routerLink=\"/signup\" routerLinkActive=\"active-link\"\n                [routerLinkActiveOptions]=\"{exact: true}\">\n                Sign Up\n            </a>\n        </li>\n    </ul>\n</header>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n})\nexport class DashboardComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"row\">\n    <div class=\"col-md-3\">\n        Lorem ipsum dolor sit, amet consectetur adipisicing elit. Fuga sint quas, excepturi rerum atque beatae eum quo\n        accusamus libero tempore laborum alias, a modi! At quae non molestias praesentium. Sapiente reprehenderit\n        debitis molestias repellat minima tempore nam sed autem est necessitatibus quam distinctio nobis vero eius\n        aspernatur provident placeat ipsum porro maxime beatae, non sint. Consectetur modi aspernatur vel totam.\n    </div>\n    <div class=\"col-md-3\">\n        Lorem ipsum dolor sit, amet consectetur adipisicing elit. Fuga sint quas, excepturi rerum atque beatae eum quo\n        accusamus libero tempore laborum alias, a modi! At quae non molestias praesentium. Sapiente reprehenderit\n        debitis molestias repellat minima tempore nam sed autem est necessitatibus quam distinctio nobis vero eius\n        aspernatur provident placeat ipsum porro maxime beatae, non sint. Consectetur modi aspernatur vel totam.\n    </div>\n    <div class=\"col-md-3\">\n        Lorem ipsum dolor sit, amet consectetur adipisicing elit. Fuga sint quas, excepturi rerum atque beatae eum quo\n        accusamus libero tempore laborum alias, a modi! At quae non molestias praesentium. Sapiente reprehenderit\n        debitis molestias repellat minima tempore nam sed autem est necessitatibus quam distinctio nobis vero eius\n        aspernatur provident placeat ipsum porro maxime beatae, non sint. Consectetur modi aspernatur vel totam.\n    </div>\n    <div class=\"col-md-3\">\n        Lorem ipsum dolor sit, amet consectetur adipisicing elit. Fuga sint quas, excepturi rerum atque beatae eum quo\n        accusamus libero tempore laborum alias, a modi! At quae non molestias praesentium. Sapiente reprehenderit\n        debitis molestias repellat minima tempore nam sed autem est necessitatibus quam distinctio nobis vero eius\n        aspernatur provident placeat ipsum porro maxime beatae, non sint. Consectetur modi aspernatur vel totam.\n    </div>\n    <div class=\"col-md-3\">\n        Lorem ipsum dolor sit, amet consectetur adipisicing elit. Fuga sint quas, excepturi rerum atque beatae eum quo\n        accusamus libero tempore laborum alias, a modi! At quae non molestias praesentium. Sapiente reprehenderit\n        debitis molestias repellat minima tempore nam sed autem est necessitatibus quam distinctio nobis vero eius\n        aspernatur provident placeat ipsum porro maxime beatae, non sint. Consectetur modi aspernatur vel totam.\n    </div>\n    <div class=\"col-md-3\">\n        Lorem ipsum dolor sit, amet consectetur adipisicing elit. Fuga sint quas, excepturi rerum atque beatae eum quo\n        accusamus libero tempore laborum alias, a modi! At quae non molestias praesentium. Sapiente reprehenderit\n        debitis molestias repellat minima tempore nam sed autem est necessitatibus quam distinctio nobis vero eius\n        aspernatur provident placeat ipsum porro maxime beatae, non sint. Consectetur modi aspernatur vel totam.\n    </div>\n    <div class=\"col-md-3\">\n        Lorem ipsum dolor sit, amet consectetur adipisicing elit. Fuga sint quas, excepturi rerum atque beatae eum quo\n        accusamus libero tempore laborum alias, a modi! At quae non molestias praesentium. Sapiente reprehenderit\n        debitis molestias repellat minima tempore nam sed autem est necessitatibus quam distinctio nobis vero eius\n        aspernatur provident placeat ipsum porro maxime beatae, non sint. Consectetur modi aspernatur vel totam.\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Component({\n  selector: 'app-forgot',\n  templateUrl: './forgot.component.html',\n  styleUrls: ['./forgot.component.scss'],\n})\nexport class ForgotComponent implements OnInit {\n  forgotForm: FormGroup;\n  forgotFormSubmited = false;\n  passwordNotification = '';\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authenticationService: AuthenticationService\n  ) {}\n\n  ngOnInit() {\n    this.forgotForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      newPassword: ['', Validators.required],\n      confirmPassword: ['', Validators.required],\n    });\n  }\n\n  get ff() {\n    return this.forgotForm.controls;\n  }\n\n  get passwordsMatch(): boolean {\n    return this.ff.newPassword.value === this.ff.confirmPassword.value;\n  }\n\n  resetPassword() {\n    this.forgotFormSubmited = true;\n\n    if (this.forgotForm.invalid || !this.passwordsMatch) {\n      return;\n    }\n\n    this.authenticationService\n      .resetPassword(this.ff.username.value, this.ff.newPassword.value)\n      .pipe(first())\n      .subscribe(\n        (_) => {\n          this.passwordNotification = 'Password successfully reset';\n          this.forgotForm.reset();\n          setTimeout(() => {\n            this.passwordNotification = null;\n          }, 3000);\n        },\n        (err) => {\n          console.log(err);\n        }\n      );\n  }\n}\n","<div class=\"container mx-auto\">\n    <div class=\"col-md-6 offset-md-3 mt-4 mb-2\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <div *ngIf=\"passwordNotification\" class=\"info alert alert-info mx-auto mb-3\">\n                    {{passwordNotification}}\n                </div>\n\n                <h1 class=\"text-center mb-5\">Forgot Password?</h1>\n\n                <p>Enter your username/email and new password.</p>\n\n                <form [formGroup]=\"forgotForm\" class=\"mx-auto\" (ngSubmit)=\"resetPassword()\">\n                    <div class=\"form-group mt-5 mb-3\">\n                        <input type=\"text\" formControlName=\"username\" class=\"form-control\" placeholder=\"Email Address\"\n                            [ngClass]=\"{ 'is-invalid': forgotFormSubmited && ff.username.errors }\" />\n                        <div *ngIf=\"forgotFormSubmited && ff.username.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"ff.username.errors.required\">\n                                Email Address is required\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group mt-4 mb-3\">\n                        <input type=\"password\" formControlName=\"newPassword\" class=\"form-control\"\n                            placeholder=\"New Password\"\n                            [ngClass]=\"{ 'is-invalid': forgotFormSubmited && ff.newPassword.errors }\" />\n                        <div *ngIf=\"forgotFormSubmited && ff.newPassword.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"ff.newPassword.errors.required\">\n                                New Password is required\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group mt-4 mb-3\">\n                        <input type=\"password\" formControlName=\"confirmPassword\" class=\"form-control\"\n                            placeholder=\"Confirm Password\"\n                            [ngClass]=\"{ 'is-invalid': forgotFormSubmited && ff.confirmPassword.errors }\" />\n                        <div *ngIf=\"forgotFormSubmited && ff.confirmPassword.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"ff.confirmPassword.errors.required\">\n                                Password Confirmation is required\n                            </div>\n                        </div>\n                        <div *ngIf=\"!passwordsMatch\" class=\"confirmation-failed\">\n                            Passwords doesn't match\n                        </div>\n                    </div>\n\n                    <div class=\"row justify-content-center align-self-center\">\n                        <button class=\"btn btn-outline-dark mt-4\" type=\"submit\">\n                            Reset Password\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>","<app-spinner *ngIf=\"loading\"></app-spinner>\n\n<app-navigation></app-navigation>\n\n<div class=\"container-fluid\">\n    <router-outlet></router-outlet>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-estate',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  loading = false;\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { SpinnerComponent } from './component_library/spinner/spinner.component';\n\nimport { ErrorInterceptor } from './helpers/error.interceptor';\nimport { JwtInterceptor } from './helpers/jwt.interceptor';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { MainComponent } from './main/main.component';\nimport { SigninComponent } from './signin/signin.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { ForgotComponent } from './forgot/forgot.component';\nimport { AboutComponent } from './about/about.component';\nimport { NavigationComponent } from './component_library/navigation/navigation.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SpinnerComponent,\n    DashboardComponent,\n    MainComponent,\n    SigninComponent,\n    SignupComponent,\n    ForgotComponent,\n    AboutComponent,\n    NavigationComponent,\n  ],\n  imports: [\n    BrowserModule,\n    NgbModule,\n    CommonModule,\n    FormsModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatIconModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment } from '../../environments/environment';\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n  constructor(private authenticationService: AuthenticationService) {}\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    const currentUser: { accessToken: string } = this.authenticationService\n      .currentUserValue;\n    const isLoggedIn = currentUser && currentUser.accessToken;\n    const isApiUrl = request.url.startsWith(environment.apiUrl);\n    if (isLoggedIn && isApiUrl) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${currentUser.accessToken}`,\n        },\n      });\n    }\n\n    return next.handle(request);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { environment } from '../../environments/environment';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthenticationService {\n  private currentUserSubject: BehaviorSubject<{ accessToken: string }>;\n  public currentUser: any;\n\n  constructor(private http: HttpClient) {\n    this.currentUserSubject = new BehaviorSubject<{ accessToken: string }>(\n      JSON.parse(localStorage.getItem('currentUser'))\n    );\n    this.currentUser = JSON.parse(localStorage.getItem('user'));\n  }\n\n  public get currentUserValue(): { accessToken: string } {\n    return this.currentUserSubject.value;\n  }\n  public get currentUserInfo() {\n    return this.currentUser;\n  }\n\n  public get headers() {\n    const updateHeaders = new HttpHeaders({\n      Authorization: `Bearer ${this.currentUserValue}`,\n      'Content-Type': 'application/json',\n    });\n    return updateHeaders;\n  }\n\n  getUsers() {\n    return this.http\n      .get<any>(`${environment.apiUrl}/auth`, { headers: this.headers })\n      .pipe(\n        map((user) => {\n          return user;\n        })\n      );\n  }\n\n  getUserById(userId: string) {\n    return this.http\n      .get<any>(`${environment.apiUrl}/auth/user/${userId}`, {\n        headers: this.headers,\n      })\n      .pipe(\n        map((user) => {\n          return user;\n        })\n      );\n  }\n\n  deactivateUserById(userId: string, status: boolean) {\n    return this.http\n      .post<any>(`${environment.apiUrl}/auth/deactivate`, { userId, status })\n      .pipe(\n        map((user) => {\n          return user;\n        })\n      );\n  }\n\n  deleteUserById(userId: string) {\n    return this.http\n      .delete<any>(`${environment.apiUrl}/auth/delete/${userId}`, {\n        headers: this.headers,\n      })\n      .pipe(\n        map((user) => {\n          return user;\n        })\n      );\n  }\n\n  signUpUser(userData: any) {\n    return this.http.post<any>(`${environment.apiUrl}/auth/signUp`, {\n      userData,\n    });\n  }\n\n  login(username: string, password: string) {\n    return this.http\n      .post<any>(`${environment.apiUrl}/auth/signin`, {\n        username,\n        password,\n      })\n      .pipe(\n        map((data) => {\n          const { accessToken, userData } = data;\n          localStorage.setItem('currentUser', JSON.stringify(accessToken));\n          localStorage.setItem('user', JSON.stringify(userData));\n          sessionStorage.setItem('user', JSON.stringify(userData));\n          this.currentUserSubject.next(data);\n          return data;\n        })\n      );\n  }\n\n  resetPassword(username: string, newPassword: string) {\n    return this.http\n      .post<any>(`${environment.apiUrl}/auth/resetPassword`, {\n        username,\n        newPassword,\n      })\n      .pipe(\n        map((data) => {\n          return data;\n        })\n      );\n  }\n\n  logout() {\n    localStorage.removeItem('currentUser');\n    localStorage.removeItem('user');\n    sessionStorage.removeItem('user');\n    this.currentUserSubject.next(null);\n  }\n\n  passwordChange(oldPassword: string, newPassword: string, user: any) {\n    return this.http.post<any>(`${environment.apiUrl}/auth/password-change`, {\n      oldPassword,\n      newPassword,\n      user,\n    });\n  }\n\n  sendEmail(\n    email: string,\n    name?: string,\n    message?: string,\n    location?: string\n  ): Observable<boolean> {\n    return this.http\n      .post<any>(`${environment.apiUrl}/auth/sendEmail`, {\n        name,\n        email,\n        message,\n        location,\n      })\n      .pipe(map((res) => res.ok));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(private authenticationService: AuthenticationService) {}\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(\n      catchError((err) => {\n        if (err.status === 401) {\n          this.authenticationService.logout();\n          location.reload();\n        }\n\n        const error = err.error.message || err.statusText;\n        return throwError(error);\n      })\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss'],\n})\nexport class SignupComponent implements OnInit {\n  registrationForm: FormGroup;\n  signupError = '';\n  registrationFormSubmitted = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authenticationService: AuthenticationService\n  ) {}\n\n  ngOnInit() {\n    this.registrationForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      email: ['', Validators.compose([Validators.required, Validators.email])],\n    });\n  }\n\n  get sf() {\n    return this.registrationForm.controls;\n  }\n\n  signUp() {\n    this.registrationFormSubmitted = true;\n\n    if (this.registrationForm.invalid) {\n      return;\n    }\n    this.authenticationService\n      .sendEmail(this.sf.email.value, this.sf.name.value, '', 'Meeting')\n      .pipe(first())\n      .subscribe((sent: boolean) => {\n        if (sent) {\n          this.signupError = null;\n          this.registrationFormSubmitted = false;\n          this.registrationForm.reset();\n        } else {\n          this.signupError = 'Registration failed';\n          setTimeout(() => {\n            this.registrationFormSubmitted = null;\n          }, 3000);\n        }\n      });\n  }\n}\n","<div class=\"container mx-auto\">\n    <div class=\"col-md-6 offset-md-3\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <div *ngIf=\"signupError\" class=\"error alert alert-danger mx-auto mb-3\">\n                    {{signupError}}\n                </div>\n\n                <h1 class=\"text-center mb-5\">Sign Up</h1>\n\n                <p>Enter your name email.</p>\n\n                <form [formGroup]=\"registrationForm\" class=\"mx-auto\" (ngSubmit)=\"signUp()\">\n                    <div class=\"form-group mt-5 mb-5\">\n                        <input type=\"text\" formControlName=\"name\" class=\"form-control\" placeholder=\"Name\"\n                            [ngClass]=\"{ 'is-invalid': registrationFormSubmitted && sf.name.errors }\" />\n                        <div *ngIf=\"registrationFormSubmitted && sf.name.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"sf.name.errors.required\">\n                                Name is required\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group mt-5 mb-5\">\n                        <input type=\"text\" formControlName=\"email\" class=\"form-control\" placeholder=\"Email\"\n                            [ngClass]=\"{ 'is-invalid': registrationFormSubmitted && sf.email.errors }\" />\n                        <div *ngIf=\"registrationFormSubmitted && sf.email.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"sf.email.errors.required\">\n                                Email is required\n                            </div>\n                            <div *ngIf=\"sf.email.errors.email\">\n                                Invalid Email format\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"row justify-content-center align-self-center\">\n                        <button class=\"btn btn-outline-dark\" type=\"submit\">\n                            Sign Up\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SigninComponent } from './signin/signin.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { ForgotComponent } from './forgot/forgot.component';\nimport { MainComponent } from './main/main.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { AboutComponent } from './about/about.component';\n\nimport { AuthGuard } from './helpers/auth.guard';\n\nconst routes: Routes = [\n  {\n    path: 'signup',\n    canActivate: [AuthGuard],\n    component: SignupComponent,\n  },\n  {\n    path: 'forgot',\n    canActivate: [AuthGuard],\n    component: ForgotComponent,\n  },\n  {\n    path: 'signin',\n    canActivate: [AuthGuard],\n    component: SigninComponent,\n  },\n  {\n    path: '',\n    component: MainComponent,\n    children: [\n      {\n        path: '',\n        component: DashboardComponent,\n      },\n      {\n        path: 'about',\n        component: AboutComponent,\n      },\n    ],\n  },\n  { path: '**', redirectTo: '/' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: false })],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss'],\n})\nexport class MainComponent {}\n","<div class=\"container main-content\">\n    <router-outlet></router-outlet>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .then((ref) => {\n    if (window['ngRef']) {\n      window['ngRef'].destroy();\n    }\n    window['ngRef'] = ref;\n  })\n  .catch((err) => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}