{"version":3,"sources":["webpack:///src/app/component_library/spinner/spinner.component.ts","webpack:///src/app/component_library/spinner/spinner.component.html","webpack:///src/app/component_library/spinner/index.ts","webpack:///src/app/helpers/index.ts","webpack:///src/environments/environment.ts","webpack:///src/app/helpers/auth.guard.ts","webpack:///src/app/auth/auth.component.ts","webpack:///src/app/auth/auth.component.html","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/helpers/jwt.interceptor.ts","webpack:///src/app/services/authentication.service.ts","webpack:///src/app/helpers/error.interceptor.ts","webpack:///src/app/auth/index.ts","webpack:///src/app/services/index.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["SpinnerComponent","environment","production","apiUrl","AuthGuard","router","authenticationService","route","state","currentUser","currentUserValue","currentData","currentUserInfo","sessionStorage","setItem","JSON","stringify","navigate","queryParams","returnUrl","url","AuthComponent","formBuilder","loading","registrationFormSubmitted","forgotFormSubmited","forgotPassword","loginFormSubmitted","registrationMode","loginError","scheduleError","passwordNotification","meetingInfo","registrationForm","group","name","required","email","compose","loginForm","username","password","forgotForm","newPassword","confirmPassword","snapshot","controls","ff","value","invalid","passwordsMatch","resetPassword","pipe","subscribe","_","reset","setTimeout","err","sendEmail","sf","sent","login","lf","error","AppComponent","AppModule","provide","useClass","multi","JwtInterceptor","request","next","isLoggedIn","accessToken","isApiUrl","startsWith","clone","setHeaders","Authorization","handle","AuthenticationService","http","currentUserSubject","parse","localStorage","getItem","updateHeaders","get","headers","user","userId","status","post","userData","data","removeItem","oldPassword","message","location","res","ok","ErrorInterceptor","logout","reload","statusText","routes","path","component","redirectTo","AppRoutingModule","forRoot","useHash","bootstrapModule","then","ref","window","destroy","console","webpackEmptyAsyncContext","req","Promise","resolve","e","Error","code","keys","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-spinner',\n  templateUrl: 'spinner.component.html',\n  styleUrls: ['spinner.component.scss'],\n})\nexport class SpinnerComponent {}\n","<div class=\"overlay\">\n    <div class=\"loader\">\n        <div class=\"inner one\"></div>\n        <div class=\"inner two\"></div>\n        <div class=\"inner three\"></div>\n    </div>\n</div>","export * from './spinner.component';\n","export * from './auth.guard';\nexport * from './error.interceptor';\nexport * from './jwt.interceptor';\n","export const environment = {\n  production: false,\n  apiUrl: 'http://localhost:3000'\n};\n","import { Injectable } from '@angular/core';\nimport {\n  Router,\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n} from '@angular/router';\n\nimport { AuthenticationService } from '../services';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const currentUser = this.authenticationService.currentUserValue;\n    if (currentUser) {\n      const currentData = this.authenticationService.currentUserInfo;\n      if (currentData) {\n        sessionStorage.setItem('user', JSON.stringify(currentData));\n        return true;\n      }\n      return true;\n    }\n    // not logged in so redirect to login page with the return url\n    this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n    return false;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AuthenticationService } from '../services';\n\n@Component({\n  templateUrl: 'auth.component.html',\n  styleUrls: ['./auth.component.scss'],\n})\nexport class AuthComponent implements OnInit {\n  loginForm: FormGroup;\n  registrationForm: FormGroup;\n  forgotForm: FormGroup;\n  loading = false;\n  registrationFormSubmitted = false;\n  forgotFormSubmited = false;\n  forgotPassword = false;\n  loginFormSubmitted = false;\n  registrationMode = true;\n  returnUrl: string;\n  loginError = '';\n  scheduleError = '';\n  passwordNotification = '';\n  meetingInfo = '';\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {}\n\n  ngOnInit() {\n    this.registrationForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      email: ['', Validators.compose([Validators.required, Validators.email])],\n    });\n\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n\n    this.forgotForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      newPassword: ['', Validators.required],\n      confirmPassword: ['', Validators.required],\n    });\n\n    this.returnUrl =\n      this.route.snapshot.queryParams.returnUrl !== '/'\n        ? this.route.snapshot.queryParams.returnUrl\n        : '/dashboard';\n  }\n\n  get sf() {\n    return this.registrationForm.controls;\n  }\n\n  get lf() {\n    return this.loginForm.controls;\n  }\n\n  get ff() {\n    return this.forgotForm.controls;\n  }\n\n  get passwordsMatch(): boolean {\n    return this.ff.newPassword.value === this.ff.confirmPassword.value;\n  }\n\n  resetPassword() {\n    this.forgotFormSubmited = true;\n\n    if (this.forgotForm.invalid || !this.passwordsMatch) {\n      return;\n    }\n\n    this.authenticationService\n      .resetPassword(this.ff.username.value, this.ff.newPassword.value)\n      .pipe(first())\n      .subscribe(\n        (_) => {\n          this.loginError = null;\n          this.passwordNotification = 'Password successfully reset';\n          this.forgotForm.reset();\n          this.forgotPassword = false;\n          setTimeout(() => {\n            this.passwordNotification = null;\n          }, 3000);\n        },\n        (err) => {\n          this.loginError = err;\n        }\n      );\n  }\n\n  scheduleDemo() {\n    this.registrationFormSubmitted = true;\n\n    if (this.registrationForm.invalid) {\n      return;\n    }\n    this.authenticationService\n      .sendEmail(this.sf.email.value, this.sf.name.value, '', 'Meeting')\n      .pipe(first())\n      .subscribe((sent: boolean) => {\n        if (sent) {\n          this.scheduleError = null;\n          this.meetingInfo = `Meeting for ${this.sf.name.value}: ${this.sf.email.value} was successfully scheduled!`;\n          this.registrationFormSubmitted = false;\n          this.registrationForm.reset();\n          setTimeout(() => {\n            this.meetingInfo = null;\n            this.registrationFormSubmitted = false;\n          }, 3000);\n        } else {\n          this.meetingInfo = null;\n          this.scheduleError = 'Meeting was not sceduled';\n          setTimeout(() => {\n            this.registrationFormSubmitted = null;\n          }, 3000);\n        }\n      });\n  }\n\n  login() {\n    this.loginFormSubmitted = true;\n\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    this.loading = true;\n    this.authenticationService\n      .login(this.lf.username.value, this.lf.password.value)\n      .pipe(first())\n      .subscribe(\n        (_) => {\n          this.router.navigate(['/dashboard']);\n        },\n        (error) => {\n          this.loginError = error;\n          setTimeout(() => {\n            this.loginError = null;\n          }, 10000);\n          this.loading = false;\n        }\n      );\n  }\n}\n","<div class=\"container mx-auto mt-5\">\n    <div class=\"d-flex flex-column\">\n        <h1 class=\"mx-auto mt-4\">Estate Management Made Simple</h1>\n        <p class=\"mx-auto mt-n3 pt-4\">Introducing a groundbreaking apartment management tool.</p>\n    </div>\n\n    <div class=\"d-flex justify-content-center mt-4\">\n        <span [ngClass]=\"{'btn-light-blue': registrationMode }\" class=\"btn btn-sm btn-outline-dark border-1 mr-5\"\n            (click)=\"registrationMode = true; forgotPassword = false\">\n            Register\n        </span>\n        <span [ngClass]=\"{'btn-light-blue': !registrationMode }\" class=\"btn btn-sm btn-outline-dark border-1\"\n            (click)=\"registrationMode = false; forgotPassword = false\">\n            Login to Account\n        </span>\n    </div>\n\n    <div class=\"col-md-6 offset-md-3 mt-4\" *ngIf=\"registrationMode && !forgotPassword\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <div *ngIf=\"meetingInfo\" class=\"info alert alert-info mx-auto mb-3\">\n                    {{meetingInfo}}\n                </div>\n\n                <div *ngIf=\"scheduleError\" class=\"error alert alert-danger mx-auto mb-3\">\n                    {{scheduleError}}\n                </div>\n\n                <h1 class=\"text-center mb-5\">User Registration</h1>\n\n                <p>Enter your name email.</p>\n\n                <form [formGroup]=\"registrationForm\" class=\"mx-auto\" (ngSubmit)=\"scheduleDemo()\">\n                    <div class=\"form-group mt-5 mb-5\">\n                        <input type=\"text\" formControlName=\"name\" class=\"form-control\" placeholder=\"Name\"\n                            [ngClass]=\"{ 'is-invalid': registrationFormSubmitted && sf.name.errors }\" />\n                        <div *ngIf=\"registrationFormSubmitted && sf.name.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"sf.name.errors.required\">\n                                Name is required\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group mt-5 mb-5\">\n                        <input type=\"text\" formControlName=\"email\" class=\"form-control\" placeholder=\"Email\"\n                            [ngClass]=\"{ 'is-invalid': registrationFormSubmitted && sf.email.errors }\" />\n                        <div *ngIf=\"registrationFormSubmitted && sf.email.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"sf.email.errors.required\">\n                                Email is required\n                            </div>\n                            <div *ngIf=\"sf.email.errors.email\">\n                                Invalid Email format\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"row justify-content-center align-self-center\">\n                        <button [disabled]=\"loading\" class=\"btn btn-lg btn-outline-success\" type=\"submit\">\n                            Register\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n\n\n    <div class=\"col-md-6 offset-md-3 mt-4\" *ngIf=\"!registrationMode && !forgotPassword\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <div *ngIf=\"loginError\" class=\"error alert alert-danger mx-auto mb-3\">\n                    {{loginError}}\n                </div>\n                <div *ngIf=\"passwordNotification\" class=\"info alert alert-info mx-auto mb-3\">\n                    {{passwordNotification}}\n                </div>\n\n                <h1 class=\"text-center mb-5\">Log In</h1>\n\n                <p>Enter your username/email and password.</p>\n\n                <form [formGroup]=\"loginForm\" class=\"mx-auto\" (ngSubmit)=\"login()\">\n                    <div class=\"form-group mt-5 mb-5\">\n                        <input type=\"text\" formControlName=\"username\" class=\"form-control\" placeholder=\"Email Address\"\n                            [ngClass]=\"{ 'is-invalid': loginFormSubmitted && lf.username.errors }\" />\n                        <div *ngIf=\"loginFormSubmitted && lf.username.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"lf.username.errors.required\">\n                                Email Address is required\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group mt-5 mb-3\">\n                        <input type=\"password\" formControlName=\"password\" class=\"form-control\" placeholder=\"Password\"\n                            [ngClass]=\"{ 'is-invalid': loginFormSubmitted && lf.password.errors }\" />\n                        <div *ngIf=\"loginFormSubmitted && lf.password.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"lf.password.errors.required\">\n                                Password is required\n                            </div>\n                        </div>\n                        <div class=\"text-right mt-3\" (click)='forgotPassword = true'>\n                            <span class=\"btn btn-sm btn-light pr-0\">Forgot Password?</span>\n                        </div>\n                    </div>\n\n                    <div class=\"row justify-content-center align-self-center\">\n                        <button [disabled]=\"loading\" class=\"btn btn-lg btn-outline-success\" type=\"submit\">\n                            Log In\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"col-md-6 offset-md-3 mt-4 mb-2\" *ngIf=\"forgotPassword\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <div *ngIf=\"loginError\" class=\"error alert alert-danger mx-auto mb-3\">\n                    {{loginError}}\n                </div>\n                <div *ngIf=\"passwordNotification\" class=\"info alert alert-info mx-auto mb-3\">\n                    {{passwordNotification}}\n                </div>\n\n                <h1 class=\"text-center mb-5\">Forgot Password</h1>\n\n                <p>Enter your username/email and new password.</p>\n\n                <form [formGroup]=\"forgotForm\" class=\"mx-auto\" (ngSubmit)=\"resetPassword()\">\n                    <div class=\"form-group mt-5 mb-3\">\n                        <input type=\"text\" formControlName=\"username\" class=\"form-control\" placeholder=\"Email Address\"\n                            [ngClass]=\"{ 'is-invalid': forgotFormSubmited && ff.username.errors }\" />\n                        <div *ngIf=\"forgotFormSubmited && lf.username.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"ff.username.errors.required\">\n                                Email Address is required\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group mt-4 mb-3\">\n                        <input type=\"password\" formControlName=\"newPassword\" class=\"form-control\"\n                            placeholder=\"New Password\"\n                            [ngClass]=\"{ 'is-invalid': forgotFormSubmited && ff.newPassword.errors }\" />\n                        <div *ngIf=\"forgotFormSubmited && ff.newPassword.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"ff.newPassword.errors.required\">\n                                New Password is required\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group mt-4 mb-3\">\n                        <input type=\"password\" formControlName=\"confirmPassword\" class=\"form-control\"\n                            placeholder=\"Confirm Password\"\n                            [ngClass]=\"{ 'is-invalid': forgotFormSubmited && ff.confirmPassword.errors }\" />\n                        <div *ngIf=\"forgotFormSubmited && ff.confirmPassword.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"ff.confirmPassword.errors.required\">\n                                Password Confirmation is required\n                            </div>\n                        </div>\n                        <div *ngIf=\"!passwordsMatch\" class=\"confirmation-failed\">\n                            Passwords doesn't match\n                        </div>\n                    </div>\n\n                    <div class=\"row justify-content-center align-self-center\">\n                        <button [disabled]=\"loading\" class=\"btn btn-lg btn-outline-success mt-4\" type=\"submit\">\n                            Reset Password\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>","<app-spinner *ngIf=\"loading\"></app-spinner>\n\n<div class=\"container\">\n    <router-outlet></router-outlet>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-estate',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  loading = true;\n\n  constructor() {\n    setTimeout(() => {\n      this.loading = false;\n    }, 3000);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { AuthComponent } from './auth';\nimport { SpinnerComponent } from './component_library/spinner';\n\nimport { JwtInterceptor, ErrorInterceptor } from './helpers';\n\n@NgModule({\n  declarations: [AppComponent, AuthComponent, SpinnerComponent],\n  imports: [\n    BrowserModule,\n    NgbModule,\n    CommonModule,\n    FormsModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatIconModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment } from '../../environments/environment';\nimport { AuthenticationService } from '../services';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n  constructor(private authenticationService: AuthenticationService) {}\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    const currentUser: { accessToken: string } = this.authenticationService\n      .currentUserValue;\n    const isLoggedIn = currentUser && currentUser.accessToken;\n    const isApiUrl = request.url.startsWith(environment.apiUrl);\n    if (isLoggedIn && isApiUrl) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${currentUser.accessToken}`,\n        },\n      });\n    }\n\n    return next.handle(request);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { environment } from '../../environments/environment';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthenticationService {\n  private currentUserSubject: BehaviorSubject<{ accessToken: string }>;\n  public currentUser: any;\n\n  constructor(private http: HttpClient) {\n    this.currentUserSubject = new BehaviorSubject<{ accessToken: string }>(\n      JSON.parse(localStorage.getItem('currentUser'))\n    );\n    this.currentUser = JSON.parse(localStorage.getItem('user'));\n  }\n\n  public get currentUserValue(): { accessToken: string } {\n    return this.currentUserSubject.value;\n  }\n  public get currentUserInfo() {\n    return this.currentUser;\n  }\n\n  public get headers() {\n    const updateHeaders = new HttpHeaders({\n      Authorization: `Bearer ${this.currentUserValue}`,\n      'Content-Type': 'application/json',\n    });\n    return updateHeaders;\n  }\n\n  getUsers() {\n    return this.http\n      .get<any>(`${environment.apiUrl}/auth`, { headers: this.headers })\n      .pipe(\n        map((user) => {\n          return user;\n        })\n      );\n  }\n\n  getUserById(userId: string) {\n    return this.http\n      .get<any>(`${environment.apiUrl}/auth/user/${userId}`, {\n        headers: this.headers,\n      })\n      .pipe(\n        map((user) => {\n          return user;\n        })\n      );\n  }\n\n  deactivateUserById(userId: string, status: boolean) {\n    return this.http\n      .post<any>(`${environment.apiUrl}/auth/deactivate`, { userId, status })\n      .pipe(\n        map((user) => {\n          return user;\n        })\n      );\n  }\n\n  deleteUserById(userId: string) {\n    return this.http\n      .delete<any>(`${environment.apiUrl}/auth/delete/${userId}`, {\n        headers: this.headers,\n      })\n      .pipe(\n        map((user) => {\n          return user;\n        })\n      );\n  }\n\n  signUpUser(userData: any) {\n    return this.http.post<any>(`${environment.apiUrl}/auth/signUp`, {\n      userData,\n    });\n  }\n\n  login(username: string, password: string) {\n    return this.http\n      .post<any>(`${environment.apiUrl}/auth/signin`, {\n        username,\n        password,\n      })\n      .pipe(\n        map((data) => {\n          const { accessToken, userData } = data;\n          localStorage.setItem('currentUser', JSON.stringify(accessToken));\n          localStorage.setItem('user', JSON.stringify(userData));\n          sessionStorage.setItem('user', JSON.stringify(userData));\n          this.currentUserSubject.next(data);\n          return data;\n        })\n      );\n  }\n\n  resetPassword(username: string, newPassword: string) {\n    return this.http\n      .post<any>(`${environment.apiUrl}/auth/resetPassword`, {\n        username,\n        newPassword,\n      })\n      .pipe(\n        map((data) => {\n          return data;\n        })\n      );\n  }\n\n  logout() {\n    localStorage.removeItem('currentUser');\n    localStorage.removeItem('user');\n    sessionStorage.removeItem('user');\n    this.currentUserSubject.next(null);\n  }\n\n  passwordChange(oldPassword: string, newPassword: string, user: any) {\n    return this.http.post<any>(`${environment.apiUrl}/auth/password-change`, {\n      oldPassword,\n      newPassword,\n      user,\n    });\n  }\n\n  sendEmail(\n    email: string,\n    name?: string,\n    message?: string,\n    location?: string\n  ): Observable<boolean> {\n    return this.http\n      .post<any>(`${environment.apiUrl}/auth/sendEmail`, {\n        name,\n        email,\n        message,\n        location,\n      })\n      .pipe(map((res) => res.ok));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { AuthenticationService } from '../services';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(private authenticationService: AuthenticationService) {}\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(\n      catchError((err) => {\n        if (err.status === 401) {\n          this.authenticationService.logout();\n          location.reload();\n        }\n\n        const error = err.error.message || err.statusText;\n        return throwError(error);\n      })\n    );\n  }\n}\n","export * from './auth.component';\n","export * from './authentication.service';\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthComponent } from './auth';\nimport { AuthGuard } from './helpers';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthComponent,\n  },\n  {\n    path: 'auth',\n    component: AuthComponent,\n  },\n  { path: '**', redirectTo: '' },\n\n  /* {\n    path: '',\n    component: LoginComponent,\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: 'admin',\n        component: LoginComponent,\n        canActivate: [AuthGuard],\n      },\n      {\n        path: 'main',\n        component: LoginComponent,\n        canActivate: [AuthGuard],\n      },\n      {\n        path: 'subscriptions',\n        component: LoginComponent,\n        canActivate: [AuthGuard],\n      },\n      {\n        path: 'account',\n        component: LoginComponent,\n        canActivate: [AuthGuard],\n      },\n    ],\n  },\n  { path: 'login', component: LoginComponent },\n  , */\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: false })],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .then((ref) => {\n    if (window['ngRef']) {\n      window['ngRef'].destroy();\n    }\n    window['ngRef'] = ref;\n  })\n  .catch((err) => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}